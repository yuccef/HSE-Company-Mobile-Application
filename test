
        /**Create a route to Get Database with all the Information of the people registered */
        app.get('/api/customers/sign', (req, res) => {
           fs.readFile('./Backend/workerBackEnd/dataWorker/signin.json', (err, data) => {
           if (err) {
           console.error(err);
           return res.sendStatus(500);
              }
            res.json(JSON.parse(data));
          });
        });    


         /**Create a route for Adding a user */
          /**the POST option is for Adding data in the server */
         app.post('/api/customers/sign', (req, res) => {
            business.AddUser(req.body);
            fs.readFile('./Backend/workerBackEnd/dataWorker/signin.json', (err) => {
            if (err) {
               res.status(500).send('Erreur lors de la lecture du fichier customers.json');
            } else {
               res.json(customers);
              }
           });            
         });

          



         
        /**Create a route to Get Database with all the Information of the people registered */
        app.get('/api/admin/sign', (req, res) => {
            fs.readFile('./Backend/adminBackEnd/dataAdmin/signin.json', (err, data) => {
            if (err) {
            console.error(err);
            return res.sendStatus(500);
               }
             res.json(JSON.parse(data));
           });
         });    
 
 
          /**Create a route for Adding a user */
           /**the POST option is for Adding data in the server */
          app.post('/api/admin/sign', (req, res) => {
             businesAdmin.AddUser(req.body);
             fs.readFile('./Backend/adminBackEnd/dataAdmin/signin.json', (err) => {
             if (err) {
                res.status(500).send('Erreur lors de la lecture du fichier customers.json');
             } else {
                res.json(Admins);
               }
            });            
          });

          



      
        //  ///////////////////////// FOR PICTURES ////////////////////////////////
        
        //  let latestPhoto = null;

        //  app.post('/api/pictures', (req, res) => {
        //    // Check that the request body is not empty
        //    if (!req.body) {
        //      return res.sendStatus(400); 
        //    }
         
        //    console.log('got photo');
         
        //    // Update the latest photo and respond happily
        //    latestPhoto = JSON.stringify(req.body.image);
        //    console.log(latestPhoto);
        //    console.log(req.body.comment);
        //    res.sendStatus(200);
        //  });
         
        //  // View latest image
        //  app.get('/api/pictures', (req, res) => {
        //    // Does this session have an image yet?
        //    console.log(latestPhoto);
        //    if (!latestPhoto) {
        //      return res.status(404).send("Nothing here yet");
        //    }
         
        //    console.log('sending photo');
         
        //    try {
        //      // Send the image
        //      var img = Buffer.from(JSON.parse(latestPhoto), 'base64');
         
        //      // Set the response headers before sending the response
        //      res.setHeader('Content-Type', 'image/png');
        //      res.setHeader('Content-Length', img.length);
        //      let fileName="testyoussef"
        //      // Save the image to file system
        //      fs.writeFile(`./signalPictures/${fileName}.png`, img, (err) => {
        //        if (err) throw err;
        //        console.log('Image saved to file system!');
        //      });
         
        //      res.send(img);
        //    } catch (e) {
        //      // Log the error and stay alive
        //      console.log(e);
        //      return res.sendStatus(500);
        //    }
        //  });
         






















//          ///////////////////////// FOR COMMENTS////////////////////////////////

//         /**Create a route to Get Database with all the Information of the people registered */
//         app.get('/api/worker/comments', (req, res) => {
//           fs.readFile('./Backend/workerBackEnd/dataWorker/comments.json', (err, data) => {
//           if (err) {
//           console.error(err);
//           return res.sendStatus(500);
//              }
//            res.json(JSON.parse(data));
//          });
//        });    


//         /**Create a route for Adding a user */
//          /**the POST option is for Adding data in the server */
//         app.post('/api/worker/comments', (req, res) => {
//            businessc.AddComment(req.body);
//            fs.readFile('./Backend/workerBackEnd/dataWorker/comments.json', (err) => {
//            if (err) {
//               res.status(500).send('Erreur lors de la lecture du fichier customers.json');
//            } else {
//               res.json(customersc);
//              }
//           });            
//         });







// */




// app.delete('/api/worker/report/:nom/:prenom', (req, res) => {
//   const nom = req.params.nom;
//   const prenom = req.params.prenom;
//   // votre code pour supprimer le rapport avec le nom et le prénom spécifiés
//   // (par exemple, en utilisant une fonction comme `deleteReportByNomPrenom(nom, prenom)`)
//   res.send(`Le rapport avec le nom ${prenom} ${nom} a été supprimé.`);
// // });
// app.delete('/api/worker/report', (req, res) => {
//   const nom = req.query.nom;
//   const prenom = req.query.prenom;
//   // votre code pour supprimer le rapport avec le nom et prénom spécifiés
//   res.send(`Le rapport avec le nom ${prenom} ${nom} a été supprimé.`);
// });